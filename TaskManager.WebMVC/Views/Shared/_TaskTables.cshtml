@using TaskManager.Core.Enums
@model IEnumerable<TaskManager.Core.Models.MTask>

@{
    var todoTasks = Model.Where(t => t.Status == TaskStatusEnum.Todo.GetHashCode());
    var inProgressTasks = Model.Where(t => t.Status == TaskStatusEnum.InProgress.GetHashCode());
    var doneTasks = Model.Where(t => t.Status == TaskStatusEnum.Done.GetHashCode());
}

<h2>Tarefas a fazer</h2>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Topic)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.User)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in todoTasks) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedAt)
        </td>
        <td>
            <span style="display: inline-block; border-radius: 10%; border: 2px solid @item.Topic.GetColorCode(); background: @item.Topic.GetColorCode(); padding: 5px;">@item.Topic.Name</span>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User.Name)
        </td>
        <td>
            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
        </td>
    </tr>
    }
    </tbody>
</table>