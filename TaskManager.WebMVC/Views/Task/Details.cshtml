@using TaskManager.Core.Models
@model TaskManager.Core.Models.MTask
@inject UserManager<IdentityUser> UserManager
@using Microsoft.AspNetCore.Identity


@{
    ViewData["Title"] = "Details";

    void AddCommentToTask(Comment comment)
    {
    }

    var user = await UserManager.GetUserAsync(User);
}

<h1>Detalhes</h1>

<div>
    <h4>Task</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TextContent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TextContent)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Model.GetStatusNameByCode(Model.Status)
        </dd>

        <h4>Subtarefas</h4>
        <hr/>
        @foreach (var subTask in Model.SubTasks)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => subTask.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => subTask.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => subTask.TextContent)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => subTask.TextContent)
            </dd>
            <hr/>
        }


        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UpdatedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Topic)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Topic.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Name)
        </dd>
        <div>
            <h4>Comentários</h4>
            <hr>

            @{
                if (Model.Comments.Count == 0)
                    Model.Comments.Add(new Comment());

                <div class="form-group">
                    <div class="form-group">
                        <label asp-for="Comments.First().TextContent" class="control-label"></label>

                        <span asp-validation-for="Comments.First().TextContent" class="text-danger"></span>
                    </div>
                    @if (user != null)
                    {
                        @user.UserName // or another relevant user property
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.User.Name) // Fallback if user not found
                    }
                </div>
            }


            @foreach (var comment in Model.Comments)
            {
                if (!string.IsNullOrEmpty(comment.TextContent))
                    @Html.Partial("_CommentDetails", comment)
            }
        </div>

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
    <a href="@Url.Action("Create", "Comment", new { taskId = Model.Id })">Novo comentário</a>
</div>